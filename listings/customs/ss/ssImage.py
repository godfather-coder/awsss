import requests
import copy

class ImageUploader:
    def __init__(self, application_id, token):
        self.url = "https://api-gateway.ss.ge/v1/RealEstate/upload-image"
        self.headers = {
            "accept": "application/json, text/plain, */*",
            "accept-language": "ka",
            "authorization": "Bearer "+token,
            "content-type": "application/json",
            "os": "web",
            "priority": "u=1, i",
            "sec-ch-ua": "\"Not)A;Brand\";v=\"99\", \"Google Chrome\";v=\"127\", \"Chromium\";v=\"127\"",
            "sec-ch-ua-mobile": "?0",
            "sec-ch-ua-platform": "\"Windows\"",
            "sec-fetch-dest": "empty",
            "sec-fetch-mode": "cors",
            "sec-fetch-site": "same-site"
        }
        self.body = {
            "applicationId": application_id,
            "content":"data:image/jpeg;base64,",
            "is360":False,
            "isGif":False
        }

    def upload_image(self, base64):
        body_copy = copy.deepcopy(self.body)
        body_copy['content'] += base64
        try:
            response = requests.post(self.url, headers=self.headers, json=body_copy)
            response.raise_for_status()
            return response.json()
        except requests.exceptions.RequestException as e:
            print(f"An error occurred: {e}")
            return None
# print(type(29939594))
# img = ImageUploader(29939594,"eyJhbGciOiJSUzI1NiIsImtpZCI6IkEzMTIxOUJCRUNCNTkyNkNEOTEzMzJDMkIwNTMzMEJERENFNkRBODJSUzI1NiIsInR5cCI6ImF0K2p3dCIsIng1dCI6Im94SVp1LXkxa216WkV6TENzRk13dmR6bTJvSSJ9.eyJuYmYiOjE3MjM4ODM3NDAsImV4cCI6MTcyMzg4NzM0MCwiaXNzIjoiaHR0cHM6Ly9hY2NvdW50LnNzLmdlIiwiYXVkIjpbInVzZXJfcmVnaXN0cmF0aW9uIiwiSm9iYXJpYUFQSSIsInBhaWRfc2VydmljZXMiLCJ3ZWJfYXBpZ2F0ZXdheSIsInJlYWxfZXN0YXRlIiwic3RhdGlzdGljcyIsImZpbGVzIiwiaG91c2VfYXBpIl0sImNsaWVudF9pZCI6InNzd2ViIiwic3ViIjoiNjIwZTA4M2YtYTNkZi00ZjMwLWE3OGUtYzBiZTkyZGMyNmE1IiwiYXV0aF90aW1lIjoxNzIzODgyNzYwLCJpZHAiOiJsb2NhbCIsInByZWZlcnJlZF91c2VybmFtZSI6InNhbmRyb2tpa2E3NEBnbWFpbC5jb20iLCJJc1ByZW1pdW0iOiJGYWxzZSIsIlNob3dBZHMiOiJUcnVlIiwiZW1haWwiOiJzYW5kcm9raWthNzRAZ21haWwuY29tIiwiZW1haWxfdmVyaWZpZWQiOiJUcnVlIiwiVXNlckVudGl0eVR5cGUiOiJJbmRpdmlkdWFsIiwiUElOIjoiOTU5MjE4MSIsIm5hbWUiOiJzYW5kcm8iLCJSb2xlcyI6IiIsImlhdCI6MTcyMzg4Mzc0MCwic2NvcGUiOlsiZmlsZXMiLCJob3VzZV9hcGkiLCJvcGVuaWQiLCJwYWlkX3NlcnZpY2VzIiwicHJvZmlsZSIsInJlYWxfZXN0YXRlIiwic3RhdGlzdGljcyIsInVzZXJfcmVnaXN0cmF0aW9uIiwid2ViX2FwaWdhdGV3YXkiLCJvZmZsaW5lX2FjY2VzcyJdLCJhbXIiOlsibWNhIl19.CosqeKaaXMdx69LAlLWvSAoBKko4GYGWYP3h0XmeeCjUJoFmh6gzwVaApfiYrmcC4fFjc4Nh_dbqPtZf-_qG0sB8ChNlWA6xnc0gPMtSLbjgUjFk4ah5uMX30cv8IRhRkMGUSCcHr7xPLovgl5uWXACjrq_jSuyQVi433gzUTol2IkVmIFqp6ANaVICyhN19eF0uKstNJC0oEt09QDax08wAfwj_PWyOdzmfhhhxo-YLBiUXWCHbm5vHYB0TQ_MLvNEVtd2yoorkGtVqKVQYKr-aeHfzmRUIj65p5Los0da4omKNui1G25M4yMFqjvIo642q2NsFzCEOpLawFug_ZA")
# print(img.upload_image(""))